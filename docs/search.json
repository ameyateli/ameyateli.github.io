[
  {
    "objectID": "londonmarathon.html",
    "href": "londonmarathon.html",
    "title": "London Marathon",
    "section": "",
    "text": "About this site\n\nlibrary(ggplot2)\ntuesdata &lt;- tidytuesdayR::tt_load('2023-04-25')\ntuesdata &lt;- tidytuesdayR::tt_load(2023, week = 17)\n\nwinners &lt;- tuesdata$winners\nlondon_marathon &lt;- tuesdata$london_marathon\n\nggplot(data = london_marathon, aes(x=Year, y=Accepted)) +\n  geom_point() + labs(title =\"Number of Accepted Runners vs Year\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ameya Teli",
    "section": "",
    "text": "Welcome! My name is Ameya Teli and I am a student at Pomona College graduating in 2027. I plan on majoring in either EA on the Mathematics track or Math along with a minor in Data Science."
  },
  {
    "objectID": "epl.html",
    "href": "epl.html",
    "title": "Premier League 2021-2022",
    "section": "",
    "text": "Analysis of Goals Scored by Home Teams for each month of the Premier League in 2021-2022.\n\nlibrary(ggplot2)\nlibrary(dplyr)\ntuesdata &lt;- tidytuesdayR::tt_load('2023-04-04')\ntuesdata &lt;- tidytuesdayR::tt_load(2023, week = 14)\n\nsoccer &lt;- tuesdata$soccer\nsoccer\n\n# A tibble: 380 × 22\n   Date      HomeTeam AwayTeam  FTHG  FTAG FTR    HTHG  HTAG HTR   Referee    HS\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 13/08/20… Brentfo… Arsenal      2     0 H         1     0 H     M Oliv…     8\n 2 14/08/20… Man Uni… Leeds        5     1 H         1     0 H     P Tier…    16\n 3 14/08/20… Burnley  Brighton     1     2 A         1     0 H     D Coote    14\n 4 14/08/20… Chelsea  Crystal…     3     0 H         2     0 H     J Moss     13\n 5 14/08/20… Everton  Southam…     3     1 H         0     1 A     A Madl…    14\n 6 14/08/20… Leicest… Wolves       1     0 H         1     0 H     C Paws…     9\n 7 14/08/20… Watford  Aston V…     3     2 H         2     0 H     M Dean     13\n 8 14/08/20… Norwich  Liverpo…     0     3 A         0     1 A     A Marr…    14\n 9 15/08/20… Newcast… West Ham     2     4 A         2     1 H     M Atki…    17\n10 15/08/20… Tottenh… Man City     1     0 H         0     0 D     A Tayl…    13\n# ℹ 370 more rows\n# ℹ 11 more variables: AS &lt;dbl&gt;, HST &lt;dbl&gt;, AST &lt;dbl&gt;, HF &lt;dbl&gt;, AF &lt;dbl&gt;,\n#   HC &lt;dbl&gt;, AC &lt;dbl&gt;, HY &lt;dbl&gt;, AY &lt;dbl&gt;, HR &lt;dbl&gt;, AR &lt;dbl&gt;\n\nsoccer_month &lt;- soccer |&gt;\n  mutate(Month = format(as.Date(Date,format=\"%d/%m/%Y\"),\"%m\"))\n\nsoccer_month\n\n# A tibble: 380 × 23\n   Date      HomeTeam AwayTeam  FTHG  FTAG FTR    HTHG  HTAG HTR   Referee    HS\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 13/08/20… Brentfo… Arsenal      2     0 H         1     0 H     M Oliv…     8\n 2 14/08/20… Man Uni… Leeds        5     1 H         1     0 H     P Tier…    16\n 3 14/08/20… Burnley  Brighton     1     2 A         1     0 H     D Coote    14\n 4 14/08/20… Chelsea  Crystal…     3     0 H         2     0 H     J Moss     13\n 5 14/08/20… Everton  Southam…     3     1 H         0     1 A     A Madl…    14\n 6 14/08/20… Leicest… Wolves       1     0 H         1     0 H     C Paws…     9\n 7 14/08/20… Watford  Aston V…     3     2 H         2     0 H     M Dean     13\n 8 14/08/20… Norwich  Liverpo…     0     3 A         0     1 A     A Marr…    14\n 9 15/08/20… Newcast… West Ham     2     4 A         2     1 H     M Atki…    17\n10 15/08/20… Tottenh… Man City     1     0 H         0     0 D     A Tayl…    13\n# ℹ 370 more rows\n# ℹ 12 more variables: AS &lt;dbl&gt;, HST &lt;dbl&gt;, AST &lt;dbl&gt;, HF &lt;dbl&gt;, AF &lt;dbl&gt;,\n#   HC &lt;dbl&gt;, AC &lt;dbl&gt;, HY &lt;dbl&gt;, AY &lt;dbl&gt;, HR &lt;dbl&gt;, AR &lt;dbl&gt;, Month &lt;chr&gt;\n\nsoccer_grouped &lt;- soccer_month |&gt;\n  group_by(Month) |&gt;\n  summarize(Total_Goals = sum(FTHG)) \n\nsoccer_grouped &lt;- mutate(soccer_grouped, Month_Name = month.name[as.numeric(Month)])\n\nsoccer_grouped |&gt;\n  ggplot(aes(x=Month_Name, y=Total_Goals)) + \n    geom_bar(stat=\"identity\") +\n    labs(title = \"Goals Scored by Home Teams\", x= \"Month\", y = \"Goals by Home Team\")"
  },
  {
    "objectID": "pj2.html",
    "href": "pj2.html",
    "title": "Project",
    "section": "",
    "text": "Link to Database\n\nlibrary(ggplot2)\ntuesdata &lt;- tidytuesdayR::tt_load('2023-12-12')\n\nholiday_movies &lt;- tuesdata$holiday_movies\nholiday_movie_genres &lt;- tuesdata$holiday_movie_genres\n\nholiday_movie_genres\n\n# A tibble: 4,531 × 2\n   tconst    genres   \n   &lt;chr&gt;     &lt;chr&gt;    \n 1 tt0020356 Comedy   \n 2 tt0020823 Drama    \n 3 tt0020823 Romance  \n 4 tt0020985 Comedy   \n 5 tt0020985 Drama    \n 6 tt0021268 Comedy   \n 7 tt0021377 Comedy   \n 8 tt0021377 Romance  \n 9 tt0021381 Adventure\n10 tt0021381 Crime    \n# ℹ 4,521 more rows\n\nholiday_movies\n\n# A tibble: 2,265 × 14\n   tconst   title_type primary_title original_title  year runtime_minutes genres\n   &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt; \n 1 tt00203… movie      Sailor's Hol… Sailor's Holi…  1929              58 Comedy\n 2 tt00208… movie      The Devil's … The Devil's H…  1930              80 Drama…\n 3 tt00209… movie      Holiday       Holiday         1930              91 Comed…\n 4 tt00212… movie      Holiday of S… Prazdnik svya…  1930              83 Comedy\n 5 tt00213… movie      Sin Takes a … Sin Takes a H…  1930              81 Comed…\n 6 tt00213… movie      Sinners' Hol… Sinners' Holi…  1930              60 Adven…\n 7 tt00230… movie      Husband's Ho… Husband's Hol…  1931              70 Drama \n 8 tt00248… movie      Beggar's Hol… Beggar's Holi…  1934              60 Crime…\n 9 tt00250… movie      Cowboy Holid… Cowboy Holiday  1934              56 Weste…\n10 tt00250… movie      Death Takes … Death Takes a…  1934              79 Drama…\n# ℹ 2,255 more rows\n# ℹ 7 more variables: simple_title &lt;chr&gt;, average_rating &lt;dbl&gt;,\n#   num_votes &lt;dbl&gt;, christmas &lt;lgl&gt;, hanukkah &lt;lgl&gt;, kwanzaa &lt;lgl&gt;,\n#   holiday &lt;lgl&gt;\n\n\nFirst Plot - What genre do movies with love in the title fall under?\n\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\ncolnames(holiday_movies)\n\n [1] \"tconst\"          \"title_type\"      \"primary_title\"   \"original_title\" \n [5] \"year\"            \"runtime_minutes\" \"genres\"          \"simple_title\"   \n [9] \"average_rating\"  \"num_votes\"       \"christmas\"       \"hanukkah\"       \n[13] \"kwanzaa\"         \"holiday\"        \n\n#holiday_movies$simple_title\n\nlove &lt;- holiday_movies|&gt;\n  filter(str_detect(simple_title, \"love\"))\nlove\n\n# A tibble: 32 × 14\n   tconst   title_type primary_title original_title  year runtime_minutes genres\n   &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt; \n 1 tt00528… movie      Holiday for … Holiday for L…  1959             103 Comedy\n 2 tt00855… tvMovie    The Gift of … The Gift of L…  1983              96 Drama \n 3 tt00999… tvMovie    The Kid Who … The Kid Who L…  1990             118 Drama \n 4 tt01370… tvMovie    A Holiday fo… Christmas in …  1996             105 Drama…\n 5 tt04142… tvMovie    Love Hina Ch… Rabu Hina kur…  2000              46 Anima…\n 6 tt04185… movie      Christmas in… Christmas in …  2004             118 Comed…\n 7 tt10623… tvMovie    Christmas Lo… Christmas Lov…  2019              86 Comed…\n 8 tt11171… tvMovie    Our Christma… Our Christmas…  2019              82 Drama…\n 9 tt11666… tvMovie    Inn Love by … Inn for Chris…  2020              88 Comed…\n10 tt12418… movie      A Christmas … A Christmas T…  2020              70 Roman…\n# ℹ 22 more rows\n# ℹ 7 more variables: simple_title &lt;chr&gt;, average_rating &lt;dbl&gt;,\n#   num_votes &lt;dbl&gt;, christmas &lt;lgl&gt;, hanukkah &lt;lgl&gt;, kwanzaa &lt;lgl&gt;,\n#   holiday &lt;lgl&gt;\n\nlove_genre &lt;- love|&gt;\n  mutate(genre_list = genres)|&gt;\n  separate(genres, c('first','second', 'third'))\nlove_genre\n\n# A tibble: 32 × 17\n   tconst    title_type primary_title original_title  year runtime_minutes first\n   &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt;\n 1 tt0052897 movie      Holiday for … Holiday for L…  1959             103 Come…\n 2 tt0085593 tvMovie    The Gift of … The Gift of L…  1983              96 Drama\n 3 tt0099930 tvMovie    The Kid Who … The Kid Who L…  1990             118 Drama\n 4 tt0137000 tvMovie    A Holiday fo… Christmas in …  1996             105 Drama\n 5 tt0414243 tvMovie    Love Hina Ch… Rabu Hina kur…  2000              46 Anim…\n 6 tt0418599 movie      Christmas in… Christmas in …  2004             118 Come…\n 7 tt106234… tvMovie    Christmas Lo… Christmas Lov…  2019              86 Come…\n 8 tt111713… tvMovie    Our Christma… Our Christmas…  2019              82 Drama\n 9 tt116669… tvMovie    Inn Love by … Inn for Chris…  2020              88 Come…\n10 tt124182… movie      A Christmas … A Christmas T…  2020              70 Roma…\n# ℹ 22 more rows\n# ℹ 10 more variables: second &lt;chr&gt;, third &lt;chr&gt;, simple_title &lt;chr&gt;,\n#   average_rating &lt;dbl&gt;, num_votes &lt;dbl&gt;, christmas &lt;lgl&gt;, hanukkah &lt;lgl&gt;,\n#   kwanzaa &lt;lgl&gt;, holiday &lt;lgl&gt;, genre_list &lt;chr&gt;\n\nlove_movies &lt;- inner_join(love_genre, holiday_movie_genres, by = \"tconst\")\nlove_movies\n\n# A tibble: 66 × 18\n   tconst    title_type primary_title original_title  year runtime_minutes first\n   &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;         &lt;chr&gt;          &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt;\n 1 tt0052897 movie      Holiday for … Holiday for L…  1959             103 Come…\n 2 tt0085593 tvMovie    The Gift of … The Gift of L…  1983              96 Drama\n 3 tt0099930 tvMovie    The Kid Who … The Kid Who L…  1990             118 Drama\n 4 tt0137000 tvMovie    A Holiday fo… Christmas in …  1996             105 Drama\n 5 tt0137000 tvMovie    A Holiday fo… Christmas in …  1996             105 Drama\n 6 tt0137000 tvMovie    A Holiday fo… Christmas in …  1996             105 Drama\n 7 tt0414243 tvMovie    Love Hina Ch… Rabu Hina kur…  2000              46 Anim…\n 8 tt0414243 tvMovie    Love Hina Ch… Rabu Hina kur…  2000              46 Anim…\n 9 tt0414243 tvMovie    Love Hina Ch… Rabu Hina kur…  2000              46 Anim…\n10 tt0418599 movie      Christmas in… Christmas in …  2004             118 Come…\n# ℹ 56 more rows\n# ℹ 11 more variables: second &lt;chr&gt;, third &lt;chr&gt;, simple_title &lt;chr&gt;,\n#   average_rating &lt;dbl&gt;, num_votes &lt;dbl&gt;, christmas &lt;lgl&gt;, hanukkah &lt;lgl&gt;,\n#   kwanzaa &lt;lgl&gt;, holiday &lt;lgl&gt;, genre_list &lt;chr&gt;, genres &lt;chr&gt;\n\nggplot(love_movies, aes(x = genres))+ geom_bar(stat = \"count\")+labs(title = \"Genres of Holiday Movies with Love in the Title\", x = \"Genre\")\n\n\n\n\n\n\n\n\nThis plot shows that the most prevalent genre’s for holiday movies about love are Romance, Family, Drama, and Comedy.\n2nd Plot - Genres of Holiday Movies\n\nggplot(holiday_movie_genres, aes(x = genres)) + \n  geom_bar(stat = \"count\") + \n  labs(title = \"Genres of Holiday Movies\", x = \"Genre\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n3rd Plot -"
  },
  {
    "objectID": "shake.html",
    "href": "shake.html",
    "title": "Project 2",
    "section": "",
    "text": "This my textual analysis of Shakespeare dialogue in his tragedy “Romeo and Juliet”.\nThis data was curated by Nicola Rennie from The Complete Works of William Shakespeare the Web’s first edition of the Complete Works of William Shakespeare.\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 38)\n\nhamlet &lt;- tuesdata$hamlet\nmacbeth &lt;- tuesdata$macbeth\nromeo_juliet &lt;- tuesdata$romeo_juliet\n\nHow much is death mentioned in Romeo and Juliet?\n\nlibrary(stringr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\ndeathrj &lt;- romeo_juliet |&gt;\n filter(str_detect(dialogue, \"death\")) \n  \n\nggplot(deathrj, aes(x = character)) +\n  geom_bar(stat = \"count\") + \n  labs(title = \"Which character mentions death the most?\", x = \"Character\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\nlibrary(stringr)\n\nact_num &lt;- deathrj |&gt;\n  mutate(act = str_extract(act, \"(?&lt;=\\\\s)\\\\S+\"))  \n  \nggplot(act_num, aes(x = act)) + \n  geom_bar(stat = \"count\") + \n  labs(title = \"Which act has most mentions of death?\", x = \"Act\") \n\n\n\n\n\n\n\n\nThis first graph shows that Romeo has the most instances of the word “death” in his dialogue and Friar Laurence had the second most in his dialogue. This is interesting because it makes sense that Romeo says death the most as he eventually is one of those who die in this tragedy and Friar Laurence is the one to encourage this from selling a sleeping potion. As Romeo has more dialogue presumably as one of the more main characters it makes sense that he has more mentions by count versus the Apothecary who sells Romeo poison that will kill him.\nRomeo and Juliet die in Act 5 Scene 3, so having the most mentions of death in Act 3 is interesting. Maybe there is some foreshadowing happening here or something else significant which we can look through in the next plot.\nThis plot will analyze specifically dialogue in Act 3 looking for exclamations and question marks which indicate a strong emotion in the dialogue.\n\nfiltered_act_num &lt;- act_num |&gt;\n  filter(act == \"III\")|&gt;\n  mutate(strong_punctuation = str_detect(dialogue, \"!+|\\\\?+\")) |&gt;\n  mutate(scene = str_extract(scene, \"(?&lt;=\\\\s)\\\\S+\"))  \n  \n\nggplot(filtered_act_num, aes(x = scene, fill = strong_punctuation))+\n  geom_bar(position = \"fill\") + \n  labs(title = \"Proportion of strong punctuation marks across scenes\", x = \"Scene\", y = \"Proportion\")\n\n\n\n\n\n\n\n\nThis shows that there is a greater proportion of strong punctuation in Scene 5 than the rest. So potentially the strongest emotions in relation to death occur here? We will also check which scene had the most mentions of death below.\n\nggplot(filtered_act_num, aes(x = scene)) +\n  geom_bar(stat = \"count\") + \n  labs(title = \"Mentions of death across scenes in Act III\", x = \"Scene\", y = \"Count\")\n\n\n\n\n\n\n\n\nMaybe this indicates that the mentions of death in the other scenes are less emotional and thus use less strong punctuation. We will look for the following word, symbol, or space after death, to see how they compare.\n\nfiltered_act_num &lt;- act_num |&gt;\n  filter(act == \"III\")|&gt;\n  mutate(word_after_death = str_extract(dialogue, \"death\\\\s*\\\\S+\"))\n\nggplot(filtered_act_num, aes(x = word_after_death))+\n  geom_bar(stat = \"count\")+\n  labs(title = \"Death and the Word/Character after in Act III\", \n       x = \"Death + Word\", \n       y = \"Count\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nThe most common thing following death is a comma, indicating that death ends a thought of most of the dialogue in Act III. This is interesting if we wanted to analyze the style that Shakespeare uses to foreshadow the impending doom of Romeo and Juliet and those others who face tragic endings.\n\nfiltered_act_num\n\n# A tibble: 25 × 6\n   act   scene     character      dialogue          line_number word_after_death\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;                   &lt;dbl&gt; &lt;chr&gt;           \n 1 III   Scene I   Mercutio       cat, to scratch …        1525 death!          \n 2 III   Scene I   Benvolio       Stand not amazed…        1560 death,          \n 3 III   Scene I   Benvolio       Cold death aside…        1590 death aside,    \n 4 III   Scene II  Juliet         Than the death-d…        1676 death-darting   \n 5 III   Scene II  Juliet         Some word there …        1739 death,          \n 6 III   Scene II  Juliet         Hath slain ten t…        1745 &lt;NA&gt;            \n 7 III   Scene II  Juliet         But with a rear-…        1752 death,          \n 8 III   Scene II  Juliet         In that word's d…        1757 death;          \n 9 III   Scene II  Juliet         And death, not R…        1768 death,          \n10 III   Scene III Friar Laurence Not body's death…        1786 death,          \n# ℹ 15 more rows\n\n\nUpon viewing the first few lines of this data frame we can see that “Tybalt’s death” is mentioned a great amount, so perhaps the reason death is mentioned so much in this Act is because this character actually did die.\n\n\nFuture analysis on how family names associate with mentions of death:\nThese next two plots analyze which characters mention the Montague’s and the Capulet’s the most - the two rivaling families within Romeo and Juliet.\n\nromeo_juliet |&gt;\n  mutate(dialogue_lower = str_to_lower(dialogue))|&gt;\n  filter(str_detect(dialogue_lower, \"montague\")) |&gt;\n  filter(character != \"[stage direction]\") |&gt;\n  ggplot(aes(x = character)) +\n  geom_bar(stat = \"count\") + \n  labs(title = \"Which character mentions the Montague family the most?\", x = \"Character\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\nromeo_juliet |&gt;\n  mutate(dialogue_lower = str_to_lower(dialogue))|&gt;\n  filter(str_detect(dialogue_lower, \"capulet\")) |&gt;\n  filter(character != \"[stage direction]\") |&gt;\n  ggplot(aes(x = character)) +\n  geom_bar(stat = \"count\") + \n  labs(title = \"Which character mentions the Capulet family the most?\", x = \"Character\") + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n\n\n\n\n\n\n\n\nThese two plots show that Juliet mentions the Montague family the most and Benvolio, Prince, and Romeo mention the Capulet family the most. This is interesting because Romeo and Juliet have the most dialogue presumably as they are main characters so they mention the family names the most."
  }
]